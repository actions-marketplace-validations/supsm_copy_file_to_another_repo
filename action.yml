name: 'Copy File to Another Repository'
inputs: # Copied from dmnemec/copy_file_to_another_repo_action
  source_file:
    description: 'Source file from the origin directory'
    required: true
  destination_repo:
    description: 'Destination repository'
    required: true
  destination_folder:
    description: 'Directory to push the file to'
    required: false
  user_email:
    description: 'Email for the git commit'
    required: true
  user_name:
    description: 'GitHub username for the commit'
    required: true
  destination_branch:
    description: 'branch to push file to, defaults to main'
    required: false
    default: main
  destination_branch_create:
    description: 'Destination branch to create for this commit'
    required: false
  commit_message:
    description: 'A custom message for the commit'
    required: false
  rename:
    description: 'Rename the destination file'
    required: false
  use_rsync:
    description: 'Copy files/directories using rsync instead of cp. Experimental feature, please know your use case'
    required: false
  git_server:
    description: 'Git server host, default github.com'
    required: false
    default: github.com
runs:
  using: "composite"
  steps:
  - id: generate-temp-dir
    run: |
      export CLONE_DIR="$PWD/copy_file_tmp-$(openssl rand -hex 12)"
    shell: bash

  - id: configure-git
    run: |
      echo "Cloning destination git repository"
      git config --global user.email "${{ inputs.user_email }}"
      git config --global user.name "${{ inputs.user_name }}"
    shell: bash
  - id: clone-repo
    run: git clone --single-branch --branch ${{ inputs.destination_branch }} "https://x-access-token:$API_TOKEN_GITHUB@${{ inputs.git_server }}/${{ inputs.destination_repo }}.git" "$CLONE_DIR"
    shell: bash
    
  - id: rename
    run: |
      if [ ! -z "${{ inputs.rename }}}" ]
      then
        echo "Setting new filename: ${{ inputs.rename }}"
        export DEST_COPY="$CLONE_DIR/${{ inputs.destination_folder }}/${{ inputs.rename }}"
      else
        export DEST_COPY="$CLONE_DIR/${{ inputs.destination_folder }}"
      fi
    shell: bash

  - id: copy-items
    run: |
      if [ -z "${{ inputs.use_rsync }}" ]
      then
        cp -R "${{ inputs.source_file }}" "$DEST_COPY"
      else
        rsync -avrh "${{ inputs.source_file }}" "$DEST_COPY"
      fi
    shell: bash

  - id: cd
    run: cd "$CLONE_DIR"
    shell: bash

  - id: create-destination-branch
    run: |
      if [ ! -z "${{ inputs.destination_branch_create }}" ]
      then
        echo "Creating new branch: ${{ inputs.destination_branch_create }}"
        git checkout -b "${{ inputs.destination_branch_create }}"
        export OUTPUT_BRANCH="${{ inputs.destination_branch_create }}"
      else
        export OUTPUT_BRANCH="${{ inputs.destination_branch }}"
      fi
    shell: bash

  - id: set-commit-message-default
    run: |
      if [ -z "${{ inputs.commit_message }}" ]
      then
        export COMMIT_MESSAGE="Update from https://${{ inputs.git_server }}/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
      else
        export COMMIT_MESSAGE="${{ inputs.commit_message }}"
      fi
    shell: bash

  - id: commit-and-push
    run: |
      echo "Adding git commit"
      git add .
      git commit --message "$COMMIT_MESSAGE"
      echo "Pushing git commit"
      git push -u origin HEAD:"$OUTPUT_BRANCH"
    shell: bash
  
  - id: remove-clone-dir
    run: rm -rf "$CLONE_DIR"
    shell: bash

  - id: cd-back
    run: cd -
    shell: bash
