name: 'Copy File to Another Branch'
inputs: # Partially copied from dmnemec/copy_file_to_another_repo_action
  source_file:
    description: 'Source file from the origin directory'
    required: true
  destination_folder:
    description: 'Directory to push the file to'
    required: false
  user_email:
    description: 'Email for the git commit'
    required: true
  user_name:
    description: 'GitHub username for the commit'
    required: true
  destination_branch:
    description: 'branch to push file to, defaults to main'
    required: false
    default: main
  destination_branch_create:
    description: 'Destination branch to create for this commit'
    required: false
  commit_message:
    description: 'A custom message for the commit'
    required: false
  rename:
    description: 'Rename the destination file'
    required: false
  use_rsync:
    description: 'Copy files/directories using rsync instead of cp. Experimental feature, please know your use case'
    required: false
runs:
  using: "composite"
  steps:
  - id: generate-temp-dir
    run: |
      echo "CLONE_DIR=$(mktemp -d)" >> $GITHUB_ENV
    shell: bash

  - id: configure-git
    run: echo "GIT_DEST_URL=https://x-access-token:$API_TOKEN_GITHUB@github.com/$GITHUB_REPOSITORY.git" >> $GITHUB_ENV
    shell: bash
  - id: clone-repo
    run: |
      echo "Cloning destination git repository"
      git clone --single-branch --branch ${{ inputs.destination_branch }} "$GIT_DEST_URL" "$CLONE_DIR"
    shell: bash
    
  - id: rename
    run: |
      if [ ! -z "${{ inputs.rename }}" ]
      then
        echo "Setting new filename: ${{ inputs.rename }}"
        echo "DEST_COPY=$CLONE_DIR/${{ inputs.destination_folder }}/${{ inputs.rename }}" >> $GITHUB_ENV
      else
        echo "DEST_COPY=$CLONE_DIR/${{ inputs.destination_folder }}" >> $GITHUB_ENV
      fi
    shell: bash

  - id: copy-items
    run: |
      if [ -z "${{ inputs.use_rsync }}" ]
      then
        cp -R "${{ inputs.source_file }}" "$DEST_COPY"
      else
        rsync -avrh "${{ inputs.source_file }}" "$DEST_COPY"
      fi
    shell: bash

  - id: cd
    run: |
      echo "OLDPWD=$PWD" >> $GITHUB_ENV
      cd "$CLONE_DIR"
    shell: bash

  - id: create-destination-branch
    run: |
      if [ ! -z "${{ inputs.destination_branch_create }}" ]
      then
        echo "Creating new branch: ${{ inputs.destination_branch_create }}"
        git checkout -b "${{ inputs.destination_branch_create }}"
        echo "OUTPUT_BRANCH=${{ inputs.destination_branch_create }}" >> $GITHUB_ENV
      else
        echo "OUTPUT_BRANCH=${{ inputs.destination_branch }}" >> $GITHUB_ENV
      fi
    shell: bash

  - id: set-commit-message-default
    run: |
      if [ -z "${{ inputs.commit_message }}" ]
      then
        echo "COMMIT_MESSAGE=Update from https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA" >> $GITHUB_ENV
      else
        echo "COMMIT_MESSAGE=${{ inputs.commit_message }}" >> $GITHUB_ENV
      fi
    shell: bash

  - id: commit
    run: |
      git config --global user.email "${{ inputs.user_email }}"
      git config --global user.name "${{ inputs.user_name }}"
      echo "Adding git commit"
      git add .
      git commit --message "$COMMIT_MESSAGE"
    shell: bash
  - id: push
    uses: ad-m/github-push-action@master
    with: 
      github_token: ${{ env.API_TOKEN_GITHUB }}
      branch: ${{ env.OUTPUT_BRANCH }}
  
  - id: remove-clone-dir
    run: rm -rf "$CLONE_DIR"
    shell: bash

  - id: cd-back
    run: cd -
    shell: bash
